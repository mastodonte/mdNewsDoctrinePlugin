<?php

/**
 * mdNewsPlugin
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    News
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class PluginmdNews extends BasemdNews
{
    const NO_IMAGE      = '/mdNewsDoctrinePlugin/images/no_image.png';
    
    public $mdUserIdTmp = 0;

    public $mdNameSpaceIdTmp = 0;
    
    public function getObjectClass(){
        return get_class($this);
    }

    /**
     * Elimina la imagen de id $md_id
     *
     * @param <integer> $md_id
     * @param <string> $server
     */
    public function removePicture($md_id){
        $md_media_content_concrete = Doctrine::getTable('mdMediaImage')->find($md_id);
        mdMedia::removeMdMediaContent(Doctrine::getTable('mdContent')->retrieveByObject($this), $md_media_content_concrete);
    }

    public function getCategoryTree(){
        return doctrine::getTable('mdCategory')->getTreeByObjectInstance($this);
    }

    public function getAuthorAvatar(){
        //use the context application
        $context = sfContext::getInstance();
        if($context)
            return $this->getAuthorAvatarByApplicationId($context->getUser()->getMdApplication()->getId());
    }

    public function getAuthorAvatarByApplicationId($md_application_id){
        $user = $this->getMdUserProfileByApplicationId($md_application_id);
        return $user->getDefaultImage();
    }

    public function getAuthorName(){
        //use the context application
        $context = sfContext::getInstance();
        if($context)
            return $this->getAuthorNameByApplicationId($context->getUser()->getMdApplication()->getId());
    }

    public function getAuthorNameByApplicationId($md_application_id){
        $user = $this->getMdUserProfileByApplicationId($md_application_id);
        return $user->getName() . ' ' . $user->getLastName();
    }

    public function addView(){
        $this->setViewsCount($this->getViewsCount()+1);
        $this->save();
    }

    public function retrieveDefault()
    {
        return self::NO_IMAGE;
    }
}
